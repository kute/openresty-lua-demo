user  root;
worker_processes  ${{NUM_WORKERS}};

events {
    multi_accept on;
    worker_connections  ${{WORKER_CONNECTION}};
}

http {
    # basic setting
    charset utf-8;

    # 高效传输文件
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    log_not_found off;
    keepalive_timeout 65;
    client_max_body_size 16M;
    types_hash_max_size 2048;
    # 隐藏版本号
    server_tokens off;

    ssi on;
    ssi_silent_errors on;
    fastcgi_intercept_errors on;
    port_in_redirect off;

    include       mime.types;
    default_type application/octet-stream;

    log_format main
                '$remote_addr - $remote_user [$time_local] $request_time '
                '"$request_method $scheme://$host$request_uri" '
                '$status $body_bytes_sent '
                '"$http_referer" "$http_user_agent" '
                '$request_time $upstream_response_time '
                '$upstream_addr $upstream_status '
                '$http_x_forwarded_for "$request_body" $request';

    # 限速
    limit_req_zone $http_x_forwarded_for zone=one:10m rate=1r/s;

    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $http_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_buffers 8 16k;
    proxy_buffer_size 32k;

    proxy_hide_header Vary;
    proxy_set_header Accept-Encoding ' ';
    proxy_connect_timeout 5s;
    proxy_send_timeout 2m;
    proxy_read_timeout 2m;

    proxy_ignore_client_abort off;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 ;

    # set lua base path
    lua_package_path '/opt/openresty/lualib/?lua;;';
    lua_code_cache ${{CODE_CACHE}};
    # ngx.shared.<name> 共享区域
    lua_shared_dict access 10m;

    server {
        listen ${{PORT}};
        server_name  "";

        location / {
            access_log off;
            return 200 "Ok!";
        }

        # health check
        location /alive {
            return 200;
            access_log   off;
            default_type  text/html;
        }

        location = /favicon.ico {
           log_not_found off;
           access_log off;
        }
    }

    include servers/*.conf;
    include servers/*.com;
}